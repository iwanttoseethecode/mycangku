package com.guantang.cangkuonline.fragment;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.guantang.cangkuonline.R;
import com.guantang.cangkuonline.XListView.XListView.IXListViewListener;
import com.guantang.cangkuonline.activity.SomeOneTypeOrderActivity;
import com.guantang.cangkuonline.database.DataBaseHelper;
import com.guantang.cangkuonline.swipemenuXlistview.SwipeMenuXListView;
import com.guantang.cangkuonline.webservice.WebserviceImport;
import com.guantang.cangkuonline.webservice.WebserviceImport_more;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

public class CompanyOrderFragment extends Fragment implements IXListViewListener{

	public String dwid = "";
	public SwipeMenuXListView mListView;
	public List<Map<String,Object>> mList = new ArrayList<Map<String,Object>>();
	private String[] str = { DataBaseHelper.ID, DataBaseHelper.Status,
			DataBaseHelper.DWName, DataBaseHelper.LXR,
			DataBaseHelper.OrderIndex, DataBaseHelper.Trades,
			DataBaseHelper.dirc, DataBaseHelper.Sqdt, DataBaseHelper.TEL,
			DataBaseHelper.zje, DataBaseHelper.yfje, DataBaseHelper.syje,
			DataBaseHelper.BZ, DataBaseHelper.sqr, DataBaseHelper.ReqDate,
			DataBaseHelper.DepName, DataBaseHelper.DWID, DataBaseHelper.sqrID };
	private String[] str2 = { "id", "status", "dwName", "lxr", "orderIndex",
			"trades", "dirc", "sqdt", "tel", "zje", "yfje", "syje", "bz",
			"sqr", "ReqDate", "depName", "dwid", "sqrID" };

	public static CompanyOrderFragment getInstance(String dwid) {
		CompanyOrderFragment mCompanyOrderFragment = new CompanyOrderFragment();
		Bundle bundle = new Bundle();
		bundle.putString("dwid", dwid);
		mCompanyOrderFragment.setArguments(bundle);
		return mCompanyOrderFragment;
	}

	@Override
	public void onAttach(Activity activity) {
		// TODO Auto-generated method stub
		super.onAttach(activity);
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		dwid = getArguments().getString("dwid");
		View view = inflater.inflate(R.layout.orderstatus_fragment_layout, null);
		return view;
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onActivityCreated(savedInstanceState);
		mListView = (SwipeMenuXListView) getView().findViewById(R.id.djlist);
		mListView.setXListViewListener(this);
		mListView.setPullLoadEnable(true);// 设置可以加载更多
		mListView.setPullRefreshEnable(true);// 设置可以刷新
		
		if (WebserviceImport.isOpenNetwork(getActivity())) {
			new GetCompanyDDAsyncTask().execute("0");
		} else {
			Toast.makeText(getActivity(), "网络未连接", Toast.LENGTH_SHORT).show();
		}
	}

	class GetCompanyDDAsyncTask extends AsyncTask<String, Void, String> {

		@Override
		protected String doInBackground(String... params) {
			// TODO Auto-generated method stub
			String jsonString = WebserviceImport_more.GetCompanyDD_1_0(6, params[0], -1, dwid);
			return jsonString;
		}

		@Override
		protected void onPostExecute(String result) {
			// TODO Auto-generated method stub
			super.onPostExecute(result);
			try {
				JSONObject jsonObject = new JSONObject(result);
				switch (jsonObject.getInt("Status")) {
				case 1:
					parseData(jsonObject);
					break;
				case 2://提示数据加载完成
					parseData(jsonObject);
					if(!mList.isEmpty()){
						Toast.makeText(SomeOneTypeOrderActivity.this, jsonObject.getString("Message"), Toast.LENGTH_SHORT).show();
					}
					break;
				default:
					Toast.makeText(getActivity(), jsonObject.getString("Message"), Toast.LENGTH_SHORT).show();
					break;
				}
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}
	
	public void parseData(JSONObject jsonObject) throws JSONException{
		JSONObject dataJSONObject = jsonObject.getJSONObject("Data");
		JSONArray dsJSONArray = dataJSONObject.getJSONArray("ds");
		int Length = dsJSONArray.length();
		for(int i = 0; i<Length; i++){
			JSONObject myJSONObject = dsJSONArray.getJSONObject(i);
			Map<String,Object> map = new HashMap<String,Object>();
			for(int j =0;j<18;j++){
				map.put(str[j], myJSONObject.getString(str2[j]));
			}
			mList.add(map);
		}
		mDDAdapter.setData(mList);
	}

	@Override
	public void onRefresh() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onLoadMore() {
		// TODO Auto-generated method stub
		
	}

}
